{
  "hash": "f41199e25b63824144a45997b1ac20a8",
  "result": {
    "markdown": "---\nformat: \n  revealjs:\n    theme: [default, styles.scss]\n    width: 1200\n    slide-number: true\nexecute: \n  echo: true\n---\n\n\n## Introduction to Rmarkdown/Quarto <br> for Reproducibility\n\n### SCO-SOC Workshop 2022 {.spacer}\n\nSteffi LaZerte\n\n::: {layout-ncol=2 style=\"text-align:center\" layout-valign=\"center\"}\n![](https://rmarkdown.rstudio.com/docs/reference/figures/logo.png){fig-alt=\"Rmarkdown hex logo featuring a light green feather pen in a dark teal hexagon with the word rmarkdown below\"}\n\n![](https://quarto.org/quarto.png){fig-alt=\"Quarto logo featuring a light blue background and a white quartered circle before the word quarto\"}\n:::\n\n# Getting Started\n\n## Introduction\n\nToday learning to create static HTML reports from R code  \n[(but can also create websites, and presentations--like this one!)]{.small}\n\n. . .\n\n**Why?**\n\n::: {.incremental}\n\n- Keep track of your code *and* results\n- Share your work\n- Ensure reproducibility\n- Be nice to your future self (*What did I do again? What were the results?*)\n:::\n\n. . . \n\n> Okay, what kind of report?\n\n## For example...\n\n````\n## Setup\nThis is my **great** study.... I used these packages:\n\n```{{r}}\nlibrary(tidyverse)\n```\n\n## Loading data\nThese are the datasets I used\n\n```{{r}}\nmy_data <- read_csv(\"https://raw.githubusercontent.com/steffilazerte/NRI_7350/main/data/chorus.csv\")\nmy_data\n```\n\nThis is what it looks like\n\n```{{r}}\n#| fig.width = 6\nggplot(data = my_data, aes(x = urbanization, y = songs)) +\n  geom_point()\n```\n````\n\n## Becomes...\n\n:::{.box .small}\n\n### Setup\nThis is my **great** study.... I used these packages:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6     ✔ purrr   0.3.4\n✔ tibble  3.1.7     ✔ dplyr   1.0.9\n✔ tidyr   1.2.0     ✔ stringr 1.4.0\n✔ readr   2.1.2     ✔ forcats 0.5.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n:::\n\n\n### Loading data {.spacer}\nThese are the datasets I used\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_data <- read_csv(\"https://raw.githubusercontent.com/steffilazerte/NRI_7350/main/data/chorus.csv\")\nmy_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 51 × 3\n   urbanization songs calls\n          <dbl> <dbl> <dbl>\n 1        0.794     0   136\n 2        0.890    60    12\n 3       -1.85     55    66\n 4       -1.85     22   115\n 5        0.835    95     3\n 6       -1.85      0    70\n 7       -1.85     25    44\n 8        3.05      0   122\n 9        2.64     80     1\n10       -1.54      0    45\n# … with 41 more rows\n```\n:::\n:::\n\n\nThis is what it looks like\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = my_data, aes(x = urbanization, y = songs)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](intro_to_rmarkdown_files/figure-revealjs/unnamed-chunk-3-1.png){width=576}\n:::\n:::\n\n\n:::\n\n\n## For another example...\n\n\n````\n### Visual of Thresholds Calculations\n\n> - Pink ribbon = 99% Confidence interval of latitudes predicted from GAM\n> - Black lines in the ribbon are the upper and lower limit, the middle\nline is the predicted latitude (from GAM model)\n> - Transparent blue rectangles indicate the date ranges used to establish\nthe latitudes just after and just before migration.\n> - Blue horizontal lines represents the latitude threshold for spring \n    migration (begin/end)\n> - Orange horzontal lines represents the latitude threshold for fall \n    migration (begin/end)\n\n```{{r}}\n#| fig.asp: 1 \n#| fig.width: 15\nwrap_plots(g) + plot_layout(guides = \"collect\", nrow = 1)\n```\n\n````\n\n:::{.small .spacer}\n(*Plus a bunch of other options*)\n:::\n\n\n## Becomes...\n\n\n![](report.png)\n\n## Wait a minute...\n\n> That doesn't look like an R Script...\n\n\n::::{.columns}\n\n:::{.column width=\"60%\" .small}\n\n````{code-line-numbers=\"|5,12-13,20-21|1-2,8-9,16|4,6,11,14,18,22|19\"}\n## Setup\nThis is my **great** study.... I used these packages:\n\n```{{r}}\nlibrary(tidyverse)\n```\n\n## Loading data\nThese are the datasets I used\n\n```{{r}}\nmy_data <- read_csv(\"https://raw.githubusercontent.com/steffilazerte/NRI_7350/main/data/chorus.csv\")\nmy_data\n```\n\nThis is what it looks like\n\n```{{r}}\n#| fig.width = 6\nggplot(data = my_data, aes(x = urbanization, y = songs)) +\n  geom_point()\n```\n````\n:::\n\n:::{.column width=\"40%\"}\n\n### Four things going on...\n\n1. R code\n2. Markdown\n3. R code fences (define code *chunks*)\n4. YAML *chunk* options\n\n:::{.fragment}\n> This is actually not an **.R** script...  \n> it's an **Rmarkdown (`.Rmd`)** or    \n> **Quarto (`.qmd`)** document!\n:::\n\n:::\n\n::::\n\n\n## Quick start\n\n- File > New File > Quarto Document [(or R Markdown, if you prefer)]{.small}\n- Add details, click \"Create\"\n- Click \"Render\" button in the top panel (Quarto)\n  - [or \"Knit\" button (R Markdown)]{.small}\n\n> Demo\n\n\n# Your turn\n\nUsing this RStudio template, add in some code from your own scripts and \nrender it.\n\nKeep it relatively simple for now 😉\n\n. . . \n\n:::{.spacer}\n> What just happened? What are all these things?<br>\n> **Rmarkdown? Markdown? Quarto?**\n:::\n\n\n## Terminology\n\n### R & RStudio\n\n- Both are programs\n- R is the programming language/envrionment\n- RStudio is an IDE (integrated development environment)\n\n\n## Terminology\n\n### Markdown\n \n- A text markup language\n- Files are `.md`\n\n\n\n:::: {.columns}\n\n::: {.column width=\"60%\"}\n\n[**For example, the following...**]{.spacer}\n\n\n::: {.cell}\n\n```{.md .cell-code}\n### My heading\n\n**Hi!** This is in *italics*\n\nA [link](https://cran.r-project.org/) to R\n\n```\n:::\n\n:::\n\n::: {.column width=\"40%\"}\n\n[**Becomes...**]{.spacer}\n\n### My heading\n\n**Hi!** This is in *italics*\n\nA [link](https://cran.r-project.org/) to R\n:::\n\n::::\n\n\n## Terminology\n\n### RMarkdown, Quarto, knitr, and Pandoc\n\n- **RMarkdown(`.Rmd`)** and **Quarto (`.qmd`)** files are a *mix* of Markdown *and* R code\n- **knitr** is an R package which evaluates R code and returns the output as a Markdown file\n- **Pandoc** is a separate (independent) program that converts Markdown to a variety of formats\n\n![](https://quarto.org/docs/get-started/hello/images/rstudio-qmd-how-it-works.png){fig-alt=\"How Quarto works: qmd to knitr to md to pandoc to multiple formats including pdf, HTML and Microsoft Word\"}\n\n. . . \n\n> **Rmarkdown vs. Quarto**  \n> Quarto (`.qmd`) is the *next generation* of Rmarkdown (`.Rmd`). \n> You can still use Rmarkdown (it's not going anywhere), \n> but Quarto is much newer and more powerful.\n\n\n## Terminology\n\n### YAML, HTML, CSS\n\n. . . \n\n- **YAML** is a language for specifying metadata  \n  - Used for specifying document options and *chunk* options\n\n. . . \n\n- **HTML** is a language for making websites\n  - Can be used directly in `.qmd`/`.Rmd` files if you plan to output to HTML\n  - E.g., can use `<br>` for a line **br**eak\n\n. . .\n\n- **CSS** is a language for *styling* websites\n  - Can be used to apply custom styles to documents\n\n\n## Some options\n\n### Document level options - YAML block\n\n\n::: {.cell}\n\n```{.yaml .cell-code}\n---\ntitle: \"My great analysis\"\nformat: \n  html: \n    code-fold: true\ndate: today\ntoc: true\n---\n```\n:::\n\n\n- `date: today` to include today's date\n- `toc: true` to include a table of contents\n- `code-fold: true` to hide code (with option to show)\n\n\n> **Note:** These are Quarto options! RMarkdown has similar ones, but they may \n> be slightly different. E.g., `format: html_document` in RMarkdown.\n\n\n## Some options\n\n### Chunk level options - YAML notation\n\n::::{.columns}\n\n:::{.column width=\"55%\" .small}\n\n````\n```{{r}}\n#| fig.width: 10\n#| fig.asp: 0.5\n#| fig.alt: |\n#|   A scatterplot in black and white showing degree of \n#|   urbanization on the x-axis and number of songs on \n#|   the y-axis with no appreciable pattern in the data.\n#| fig.cap: |\n#|   The relationship between urbanization and the number\n#|   of songs in mountain chickadee dawn choruses.\n\nggplot(data = my_data, aes(x = urbanization, y = songs)) +\n  geom_point()\n```\n````\n:::\n\n:::{.column width=\"45%\"}\n\n- `fig.width` width of figure in inches\n- `fig.asp` aspect of the figure (1 = square)\n   (i.e. height = width * aspect)\n- `fig.alt` **Accessibility** Alt text for screen readers helping those who can't see the figure \n   (should be descriptive, not the same as a caption)\n- `fig.cap` Figure caption \n\n:::\n  \n::::\n\n## Gives...\n\n::: {.cell fig.asp='0.5'}\n\n```{.r .cell-code}\nggplot(data = my_data, aes(x = urbanization, y = songs)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![The relationship between urbanization and the number\nof songs in mountain chickadee dawn choruses.](intro_to_rmarkdown_files/figure-revealjs/unnamed-chunk-6-1.png){fig-alt='A scatterplot in black and white showing degree of\nurbanization on the x-axis and number of songs on\nthe y-axis with no appreciable pattern in the data.\n' width=960}\n:::\n:::\n\n  \n  \n## Enhancing Reproducibility\n\n- Make your publication figures in reports\n- Date your reports (`my_analysis_2022-09-08.html`)\n- Include info on packages used (because you're going to [cite](https://ropensci.org/blog/2021/11/16/how-to-cite-r-and-r-packages/) them... right? **RIGHT?**)\n   - `devtools::session_info()`\n   - `report::report_packages()`\n   - `report::cite_packages()`\n- Embed data directly (for smaller datasets) using [DT](https://rstudio.github.io/DT/) package\n\n::: {.cell}\n\n```{.r .cell-code}\nDT::datatable(mtcars, extensions = 'Buttons',\n              options = list(dom = 'Bfrtip', buttons = c('csv', 'excel')))\n```\n:::\n\n                 \n. . . \n\n:::{.spacer}\n> And seriously, **[cite](https://ropensci.org/blog/2021/11/16/how-to-cite-r-and-r-packages/) the packages 😁**\n:::\n\n# Your turn\n\nUse the more advanced [template](https://steffilazerte.ca/intro_to_rmarkdown/example.qmd)\n(`example.qmd`) to create a reproducible report of your analysis. \n\nConsider the options we learned about. Anything you'd like to add?\n\n# Some final thoughts\n\n\n## Rendering vs. Spinning\n\n\n::::{.columns}\n\n:::{.column width=\"50%\"}\n\n### Rendering [(Render/Knit button)]{.small}\n:::{.hide .spacer}\n|                    |   |       |   |      |\n| -----------------: | - | ----- | - | ---- |\n| **`.Rmd`/`.qmd`**  | → | `.md` | → | HTML |\n: {tbl-colwidths=\"[10,5,5,5,75]\"}\n:::\n\n:::{.spacer .fragment  fragment-index=2}\n- Good for lots of text \n- Better option control\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n### Spinning [(Knit button)]{.small}\n:::{.hide .spacer}\n|                    |   |       |   |      |\n| -----------------: | - | ----- | - | ---- |\n|**`.R`**           | → | `.md` | → | HTML |\n: {tbl-colwidths=\"[10,5,5,5,75]\"}\n:::\n\n\n:::{.spacer .fragment fragment-index=2}\n- Easier to code \n:::\n\n:::\n::::\n\n. . . \n\n:::{.spacer}\n> Quarto notation (slightly different from Rmarkdown) *only* for\n> `.qmd` documents so far\n:::\n\n\n\n## Resources\n\n::::{.columns}\n\n:::{.column width=\"70%\"}\n\n### Online References\n\n- [Quarto Documentation](https://quarto.org)\n- [Openscapes' Quarto Tutorial](https://openscapes.github.io/quarto-website-tutorial/)\n- [RStudio's Welcome to Quarto Workshop!](https://www.youtube.com/watch?v=yvi5uXQMvu4) [(video)]{.small}\n- [We don't talk about Quarto](https://www.apreshill.com/blog/2022-04-we-dont-talk-about-quarto/)  [(blog post)]{.small}\n- [A Quarto tip a day](https://mine-cetinkaya-rundel.github.io/quarto-tip-a-day/) [(blog)]{.small}\n- [R Markdown Documentation](https://rmarkdown.rstudio.com/)\n- [R Markdown: The Definitive Guide](https://bookdown.org/yihui/rmarkdown/)  [(online book)]{.small}\n- RStudio > Help > Markdown Quick Reference\n- RStudio > Help > Cheat Sheets > Rmarkdown Cheat Sheet\n- RStudio > Help > Cheat Sheets > Rmarkdown Reference Guide\n:::\n\n:::{.column width=\"30%\"}\n\n### Examples\n\n- [This presentation](https://github.com/steffilazerte/intro-to-rmarkdown)\n- [Quarto Gallery](https://quarto.org/docs/gallery/)\n- [R Markdown Gallery](https://rmarkdown.rstudio.com/gallery.html)\n:::\n\n::::\n\n",
    "supporting": [
      "intro_to_rmarkdown_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}